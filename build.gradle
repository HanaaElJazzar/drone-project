plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}
//println "Gradle version: " + gradle.gradleVersion

group = 'com.musala'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'
	//implementation 'log4j:log4j:2.17.1'
}

final def all = configurations.all {
	resolutionStrategy.capabilitiesResolution.withCapability("log4j:log4j") {
		def toBeSelected = candidates.find { it.id instanceof ModuleComponentIdentifier && it.id.module == 'log4j-over-slf4j' }
		if (toBeSelected != null) {
			select(toBeSelected)
		}
		because 'use slf4j in place of log4j'
	}
}
all

tasks.named('test') {
	useJUnitPlatform()
}
